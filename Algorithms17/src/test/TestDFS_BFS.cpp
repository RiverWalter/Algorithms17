#include "../../include/headers.h"
#include <vector>
//t: D for DFS, B for BFS
void TestDFS_BFS(char t)
{
    int n[] = { 6, 9, 8 };
    vector<vector<vector<int>>> g = { 
        // Dijkstra's algorithm on Wikipedia
        {
            { 0, 1, 1, 0, 0, 1 },
            { 1, 0, 1, 1, 0, 0 },
            { 1, 1, 0, 1, 0, 1 },
            { 0, 1, 1, 0, 1, 0 },
            { 0, 0, 0, 1, 0, 1 },
            { 1, 0, 1, 0, 1, 0 },
        },
        //ZH-Zheng's graph traversal demo
        {
            { 0, 1, 1, 1, 0, 0, 0, 0, 0 },
            { 1, 0, 0, 0, 1, 1, 0, 0, 0 },
            { 1, 0, 0, 1, 0, 0, 0, 0, 0 },
            { 1, 0, 1, 0, 1, 0, 0, 0, 0 },
            { 0, 1, 0, 1, 0, 1, 0, 1, 0 },
            { 0, 1, 0, 0, 1, 0, 0, 0, 1 },
            { 0, 0, 0, 0, 0, 0, 0, 1, 1 },
            { 0, 0, 0, 0, 1, 0, 1, 0, 1 },
            { 0, 0, 0, 0, 0, 1, 1, 1, 0 },
        },
        //XJ-Shen's exercise-2
        {
            { 0, 1, 1, 0, 1, 0, 0, 0 },
            { 1, 0, 0, 0, 0, 1, 0, 1 },
            { 1, 0, 0, 1, 0, 1, 0, 0 },
            { 0, 0, 1, 0, 1, 0, 0, 1 },
            { 1, 0, 0, 1, 0, 0, 1, 0 },
            { 0, 1, 1, 0, 0, 0, 1, 0 },
            { 0, 0, 0, 0, 1, 1, 0, 1 },
            { 0, 1, 0, 1, 0, 0, 1, 0 },
        },
    };
    for (int i = 0; i < 3; i++)
        if (t == 'D')
            DFSMCaller(n[i], g[i]);
        else
            BFSCaller(n[i], g[i]);
}